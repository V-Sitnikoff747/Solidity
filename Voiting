// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Voting {
    struct Candidate {
        string name;
        uint voteCount;
    }

    Candidate[] public candidates;
    mapping(address => bool) public hasVoted;

    
    function addCandidate(string memory _name) public {
        candidates.push(Candidate(_name, 0));
    }

    function vote(uint _index) public {
        require(!hasVoted[msg.sender], "You have already voted");
        require(_index < candidates.length, "Invalid candidate index");

        candidates[_index].voteCount += 1;
        hasVoted[msg.sender] = true;
    }

    function getResults() public view returns (Candidate[] memory) {
        return candidates;
    }
    
    function getCandidateCount() public view returns (uint) {
        return candidates.length;
    }
}
